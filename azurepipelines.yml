trigger:
- master

resources:
 repositories:
    - repository: AzureDevOps-Release-Pipeline
      type: github
      name: aparnaqa1998/AzureDevOps-Release-Pipeline
      endpoint: aparnaqa1998

variables:
  dockerRegistryServiceConnection: 'e453514d-0e47-4e4a-9ae6-6358bb376d96'
  imageRepository: 'demonodeapp'
  containerRegistry: 'demonodeapp.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'demonodeapp-secret'
   # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  
  jobs:
  - job: Build
    displayName: Build
    pool: 
     vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
       repository: $(imageRepository)
       command:  buildAndPush
       dockerfile: $(dockerfilePath)
       containerRegistry: $(dockerRegistryServiceConnection)
       tags: |
        $(tag)
    - upload: manifests
      artifact: manifests
   - task: PublishBuildArtifacts@1
     displayName: 'Publish coverage reports'
    inputs:
     PathtoPublish: 'coverage'
     ArtifactName: 'coverage'

      
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'releasepipeline.kube-public'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)