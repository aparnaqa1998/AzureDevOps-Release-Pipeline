trigger:
- master

resources:
 repositories:
    - repository: AzureDevOps-Release-Pipeline
      type: github
      name: aparnaqa1998/AzureDevOps-Release-Pipeline
      endpoint: aparnaqa1998
pool: MyPool

variables:
  dockerRegistryServiceConnection: '7b0ff5e7-1015-4ee6-a293-341a3bcd0651'
  imageRepository: 'demonodeapp'
  containerRegistry: 'demonodeapp.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'demonodeapp-secret'
  SP_ID: '14703c66-348f-4e1c-9234-fd14a066c780'
  SP_NEW: JJT8Q~GISb45~x1~kfdzRToUo2Kb2OCl_YG5sb4v
   # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  
  jobs:
  - job: Build
    displayName: Build
    pool: MyPool
    steps:
    - script: |
        docker login $(containerRegistry) --username $(SP_ID) --password $(SP_NEW)
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
       repository: $(imageRepository)
       command:  buildAndPush
       dockerfile: $(dockerfilePath)
       containerRegistry: $(dockerRegistryServiceConnection)
       tags: |
        $(tag)
    - upload: manifests
      artifact: manifests
      
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'releasepipeline.kube-public'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)